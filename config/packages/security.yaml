security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    encoders:
        App\SharedAuthLibrary\Security\User:
            algorithm: auto
        App\Entity\User\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        service:
            id: shared_auth_library_jwt_user_provider
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User\User
                property: username
        users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/authentication$
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/authentication
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:  ^/api/
            stateless: true
            provider: service
            entry_point: lexik_jwt_authentication.jwt_token_authenticator
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        refresh:
            pattern: ^/api/token/refresh
            stateless: true
            provider: app_user_provider
        main:
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\AdminAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            json_login:
                check_path: app_json_login
                username_path: username
                password_path: password

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/authentication, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/change_user_password, roles: ROLE_USER }
        - { path: ^/api/change_password_by_sikka, roles: [ROLE_SUPER_ADMIN, ROLE_HRIS, ROLE_UPK_PUSAT, ROLE_UPK_WILAYAH, ROLE_UPK_LOKAL] }
