security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\SharedAuthLibrary\Security\User:
            algorithm: auto
        App\Entity\User\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory: { memory: null }
        service:
            id: shared_auth_library_jwt_user_provider
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User\User
                property: username
    firewalls:
        api_token_refresh:
            pattern: ^/api/token/refresh
            stateless: true
            refresh_jwt:
                provider: app_user_provider
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/authentication$
            stateless: true
            json_login:
                check_path: /api/authentication
                username_path: username
                password_path: password
                provider: app_user_provider
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api/
            stateless: true
            provider: service
            jwt: ~
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AdminAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            json_login:
                check_path: app_json_login
                username_path: username
                password_path: password

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api/token/refresh, roles: PUBLIC_ACCESS }
        - { path: ^/api/authentication, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/change_user_password, roles: ROLE_USER }
        - { path: ^/api/change_password_by_sikka, roles: [ROLE_SUPER_ADMIN, ROLE_HRIS, ROLE_UPK_PUSAT, ROLE_UPK_WILAYAH, ROLE_UPK_LOKAL] }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
